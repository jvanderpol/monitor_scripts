#!/usr/bin/env python3

import sys
import os
import shutil
import subprocess
import hashlib
import glob

def md5_file(filename):
  with open(filename,'rb') as f:
    return hashlib.md5(f.read()).hexdigest()

def sync_videos(sync_dir):
  rclone_result = subprocess.run([
    'rclone', 'sync', 'google-drive:Welcome Monitor Videos', sync_dir
  ])
  return rclone_result.returncode == 0

def find_live_video(sync_dir):
  live_video = os.path.join(sync_dir, 'live.mp4')
  if os.path.exists(live_video):
    return live_video
  video_files = glob.glob(f'{sync_dir}/*.mp4')
  if not video_files:
    return None
  return max(video_files, key=os.path.getmtime)


video_dir = '/home/pi/Videos'
sync_dir = os.path.join(video_dir, 'synced')

print(f'Syncing videos to {sync_dir}')
videos_sync_success = sync_videos(sync_dir)
if not videos_sync_success:
  sys.exit('Error running rclone')

live_video_from_sync = find_live_video(sync_dir)
if not live_video_from_sync:
  sys.exit(f'no live video found in {sync_dir}')

playing_video = os.path.join(video_dir, 'live')
print(f'Live video from sync: {live_video_from_sync}')
print(f'Playing video: {playing_video}')

if (not os.path.exists(playing_video)
    or md5_file(live_video_from_sync) != md5_file(playing_video)):
  print(f'Diff detected, updating')
  shutil.copyfile(live_video_from_sync, playing_video)
  subprocess.run([
    '/home/pi/bin/show-video'
  ])
else:
  print(f'No changes detected')
